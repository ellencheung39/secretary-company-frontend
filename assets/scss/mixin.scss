/* Media queries based on bootstrap breakpoints */
@mixin respond-to($media) {
  @if $media == phone {
    @media only screen and (max-width: $screen-xs-max) {
      @content;
    }
  } @else if $media == tablet-min {
    @media only screen and (min-width: $screen-sm-min) {
      @content;
    }
  } @else if $media == tablet {
    @media only screen and (min-width: $screen-sm-min) and (max-width: $screen-md-max) {
      @content;
    }
  } @else if $media == desktop {
    @media only screen and (min-width: $screen-md-min) {
      @content;
    }
  }
}

.container-fluid {
  max-width: $container-width-xs;
  padding-left: $grid-glutter-xs;
  padding-right: $grid-glutter-xs;
  margin: 0 auto;
  @include respond-to(tablet-min) {
    max-width: $container-width-sm;
    padding-left: $grid-glutter-sm;
    padding-right: $grid-glutter-sm;
  }
  &.full-width-xs {
    @include respond-to(phone) {
      padding-left: 0px;
      padding-right: 0px;
      > .row {
        margin: 0;
        > [class*='col-'] {
          padding: 0;
        }
      }
    }
  }
}

/* Gradient */
@mixin gradient($color) {
  @if $color == orange {
    background-image: linear-gradient(314deg, $selective-yellow, $pumpkin 30%, $sharp-radical-red 69%, $watermelon 83%, $pale-radical-red);
    background-image: -webkit-linear-gradient(314deg, $selective-yellow, $pumpkin 30%, $sharp-radical-red 69%, $watermelon 83%, $pale-radical-red);
  } @else if $color == blue {
    background-image: linear-gradient(161deg, $wild-blue-yonder, $picton-blue, $viking, $viking) !important;
    background-image: -webkit-linear-gradient(161deg, $wild-blue-yonder, $picton-blue, $viking, $viking) !important;
  } @else if $color == gold {
    background-image: linear-gradient(180deg, #eed688, #c3922e) !important;
    background-image: -webkit-linear-gradient(180deg, #eed688, #c3922e) !important;
  } @else if $color == skin {
    background-image: linear-gradient(120deg, #ffe2c7, #fab77c) !important;
    background-image: -webkit-linear-gradient(120deg, #ffe2c7, #fab77c) !important;
  } @else if $color == black {
    background-image: linear-gradient(314deg, #535965, #d8d8d8) !important;
    background-image: -webkit-linear-gradient(314deg, #535965, #d8d8d8) !important;
  } @else if $color == gratus {
    background-image: linear-gradient(80deg, #ffaf00, #f68029, #fa3846, #ff1c5c, #ff455f);
    background-image: -webkit-linear-gradient(80deg, #ffaf00, #f68029, #fa3846, #ff1c5c, #ff455f);
  }
}

@mixin aspect-ratio-wrapper($width, $height) {
  position: relative;

  &:before {
    display: block;
    content: '';
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
  }
}

/* Language specific */
@mixin language($lang) {
  body[lang='#{$lang}'] & {
    @content;
  }
}

// Visibility utilities
@mixin responsive-visibility($parent) {
  #{$parent} {
    display: block !important;
  }
  table#{$parent} {
    display: table !important;
  }
  tr#{$parent} {
    display: table-row !important;
  }
  th#{$parent},
  td#{$parent} {
    display: table-cell !important;
  }
}

@mixin responsive-invisibility($parent) {
  #{$parent} {
    display: none !important;
  }
}

@include responsive-invisibility('.visible-xs');

.visible-xs-block,
.visible-xs-inline,
.visible-xs-inline-block,
.visible-sm-block,
.visible-sm-inline,
.visible-sm-inline-block,
.visible-md-block,
.visible-md-inline,
.visible-md-inline-block,
.visible-lg-block,
.visible-lg-inline,
.visible-lg-inline-block {
  display: none !important;
}

@media (max-width: $screen-xs-max) {
  @include responsive-visibility('.visible-xs');
}

@media (max-width: $screen-xs-max) {
  @include responsive-invisibility('.hidden-xs');
}
